{"name": "test_home_link_click[Home3oQe8]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"link text\",\"selector\":\"Home3oQe8\"}\n  (Session info: chrome=121.0.6167.161); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF725645E42+3538674]\n\t(No symbol) [0x00007FF725264C02]\n\t(No symbol) [0x00007FF725115AEB]\n\t(No symbol) [0x00007FF72515BF4E]\n\t(No symbol) [0x00007FF72515C0CC]\n\t(No symbol) [0x00007FF72519E477]\n\t(No symbol) [0x00007FF72517F0EF]\n\t(No symbol) [0x00007FF72519BDE3]\n\t(No symbol) [0x00007FF72517EE53]\n\t(No symbol) [0x00007FF72514F514]\n\t(No symbol) [0x00007FF725150631]\n\tGetHandleVerifier [0x00007FF725676CAD+3738973]\n\tGetHandleVerifier [0x00007FF7256CC506+4089270]\n\tGetHandleVerifier [0x00007FF7256C4823+4057299]\n\tGetHandleVerifier [0x00007FF725395C49+720121]\n\t(No symbol) [0x00007FF72527126F]\n\t(No symbol) [0x00007FF72526C304]\n\t(No symbol) [0x00007FF72526C432]\n\t(No symbol) [0x00007FF72525BD04]\n\tBaseThreadInitThunk [0x00007FFECF70257D+29]\n\tRtlUserThreadStart [0x00007FFED166AA58+40]", "trace": "self = <testCases.test_elements_page.Test_Link_Clicks object at 0x000001846055FE00>\nlink_text = 'Home3oQe8'\n\n    @pytest.mark.parametrize('link_text', [('Home'), ('Home3oQe8')])\n    def test_home_link_click(self, link_text):\n>       self.element.click_home_link(link_text)\n\ntestCases\\test_elements_page.py:150: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageObjects\\elements_page.py:230: in click_home_link\n    self.driver.find_element(By.LINK_TEXT, link_text).click()\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000184605CD880>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF72525BD04]\\\\n\\\\tBaseThreadInitThunk [0x00007FFECF70257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFED166AA58+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"link text\",\"selector\":\"Home3oQe8\"}\nE         (Session info: chrome=121.0.6167.161); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF725645E42+3538674]\nE       \t(No symbol) [0x00007FF725264C02]\nE       \t(No symbol) [0x00007FF725115AEB]\nE       \t(No symbol) [0x00007FF72515BF4E]\nE       \t(No symbol) [0x00007FF72515C0CC]\nE       \t(No symbol) [0x00007FF72519E477]\nE       \t(No symbol) [0x00007FF72517F0EF]\nE       \t(No symbol) [0x00007FF72519BDE3]\nE       \t(No symbol) [0x00007FF72517EE53]\nE       \t(No symbol) [0x00007FF72514F514]\nE       \t(No symbol) [0x00007FF725150631]\nE       \tGetHandleVerifier [0x00007FF725676CAD+3738973]\nE       \tGetHandleVerifier [0x00007FF7256CC506+4089270]\nE       \tGetHandleVerifier [0x00007FF7256C4823+4057299]\nE       \tGetHandleVerifier [0x00007FF725395C49+720121]\nE       \t(No symbol) [0x00007FF72527126F]\nE       \t(No symbol) [0x00007FF72526C304]\nE       \t(No symbol) [0x00007FF72526C432]\nE       \t(No symbol) [0x00007FF72525BD04]\nE       \tBaseThreadInitThunk [0x00007FFECF70257D+29]\nE       \tRtlUserThreadStart [0x00007FFED166AA58+40]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "parameters": [{"name": "link_text", "value": "'Home3oQe8'"}], "start": 1707626363607, "stop": 1707626373665, "uuid": "52c2ac2b-fe10-4b9f-8148-dfb57c8d06e8", "historyId": "a67857e52c8b4a3849278c21387f59b4", "testCaseId": "4e227c3641b9ba7143bbaa7a6e60c549", "fullName": "testCases.test_elements_page.Test_Link_Clicks#test_home_link_click", "labels": [{"name": "parentSuite", "value": "testCases"}, {"name": "suite", "value": "test_elements_page"}, {"name": "subSuite", "value": "Test_Link_Clicks"}, {"name": "host", "value": "SANTOSH"}, {"name": "thread", "value": "29388-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCases.test_elements_page"}]}